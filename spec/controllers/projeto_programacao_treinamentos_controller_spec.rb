require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe ProjetoProgramacaoTreinamentosController do

  def mock_projeto_programacao_treinamento(stubs={})
    @mock_projeto_programacao_treinamento ||= mock_model(ProjetoProgramacaoTreinamento, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all projeto_programacao_treinamentos as @projeto_programacao_treinamentos" do
      ProjetoProgramacaoTreinamento.stub(:all) { [mock_projeto_programacao_treinamento] }
      get :index
      assigns(:projeto_programacao_treinamentos).should eq([mock_projeto_programacao_treinamento])
    end
  end

  describe "GET show" do
    it "assigns the requested projeto_programacao_treinamento as @projeto_programacao_treinamento" do
      ProjetoProgramacaoTreinamento.stub(:find).with("37") { mock_projeto_programacao_treinamento }
      get :show, :id => "37"
      assigns(:projeto_programacao_treinamento).should be(mock_projeto_programacao_treinamento)
    end
  end

  describe "GET new" do
    it "assigns a new projeto_programacao_treinamento as @projeto_programacao_treinamento" do
      ProjetoProgramacaoTreinamento.stub(:new) { mock_projeto_programacao_treinamento }
      get :new
      assigns(:projeto_programacao_treinamento).should be(mock_projeto_programacao_treinamento)
    end
  end

  describe "GET edit" do
    it "assigns the requested projeto_programacao_treinamento as @projeto_programacao_treinamento" do
      ProjetoProgramacaoTreinamento.stub(:find).with("37") { mock_projeto_programacao_treinamento }
      get :edit, :id => "37"
      assigns(:projeto_programacao_treinamento).should be(mock_projeto_programacao_treinamento)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created projeto_programacao_treinamento as @projeto_programacao_treinamento" do
        ProjetoProgramacaoTreinamento.stub(:new).with({'these' => 'params'}) { mock_projeto_programacao_treinamento(:save => true) }
        post :create, :projeto_programacao_treinamento => {'these' => 'params'}
        assigns(:projeto_programacao_treinamento).should be(mock_projeto_programacao_treinamento)
      end

      it "redirects to the created projeto_programacao_treinamento" do
        ProjetoProgramacaoTreinamento.stub(:new) { mock_projeto_programacao_treinamento(:save => true) }
        post :create, :projeto_programacao_treinamento => {}
        response.should redirect_to(projeto_programacao_treinamento_url(mock_projeto_programacao_treinamento))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved projeto_programacao_treinamento as @projeto_programacao_treinamento" do
        ProjetoProgramacaoTreinamento.stub(:new).with({'these' => 'params'}) { mock_projeto_programacao_treinamento(:save => false) }
        post :create, :projeto_programacao_treinamento => {'these' => 'params'}
        assigns(:projeto_programacao_treinamento).should be(mock_projeto_programacao_treinamento)
      end

      it "re-renders the 'new' template" do
        ProjetoProgramacaoTreinamento.stub(:new) { mock_projeto_programacao_treinamento(:save => false) }
        post :create, :projeto_programacao_treinamento => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested projeto_programacao_treinamento" do
        ProjetoProgramacaoTreinamento.stub(:find).with("37") { mock_projeto_programacao_treinamento }
        mock_projeto_programacao_treinamento.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :projeto_programacao_treinamento => {'these' => 'params'}
      end

      it "assigns the requested projeto_programacao_treinamento as @projeto_programacao_treinamento" do
        ProjetoProgramacaoTreinamento.stub(:find) { mock_projeto_programacao_treinamento(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:projeto_programacao_treinamento).should be(mock_projeto_programacao_treinamento)
      end

      it "redirects to the projeto_programacao_treinamento" do
        ProjetoProgramacaoTreinamento.stub(:find) { mock_projeto_programacao_treinamento(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(projeto_programacao_treinamento_url(mock_projeto_programacao_treinamento))
      end
    end

    describe "with invalid params" do
      it "assigns the projeto_programacao_treinamento as @projeto_programacao_treinamento" do
        ProjetoProgramacaoTreinamento.stub(:find) { mock_projeto_programacao_treinamento(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:projeto_programacao_treinamento).should be(mock_projeto_programacao_treinamento)
      end

      it "re-renders the 'edit' template" do
        ProjetoProgramacaoTreinamento.stub(:find) { mock_projeto_programacao_treinamento(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested projeto_programacao_treinamento" do
      ProjetoProgramacaoTreinamento.stub(:find).with("37") { mock_projeto_programacao_treinamento }
      mock_projeto_programacao_treinamento.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the projeto_programacao_treinamentos list" do
      ProjetoProgramacaoTreinamento.stub(:find) { mock_projeto_programacao_treinamento }
      delete :destroy, :id => "1"
      response.should redirect_to(projeto_programacao_treinamentos_url)
    end
  end

end
