require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe OrdemServicoItensController do

  def mock_ordem_servico_item(stubs={})
    @mock_ordem_servico_item ||= mock_model(OrdemServicoItem, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all ordem_servico_itens as @ordem_servico_itens" do
      OrdemServicoItem.stub(:all) { [mock_ordem_servico_item] }
      get :index
      assigns(:ordem_servico_itens).should eq([mock_ordem_servico_item])
    end
  end

  describe "GET show" do
    it "assigns the requested ordem_servico_item as @ordem_servico_item" do
      OrdemServicoItem.stub(:find).with("37") { mock_ordem_servico_item }
      get :show, :id => "37"
      assigns(:ordem_servico_item).should be(mock_ordem_servico_item)
    end
  end

  describe "GET new" do
    it "assigns a new ordem_servico_item as @ordem_servico_item" do
      OrdemServicoItem.stub(:new) { mock_ordem_servico_item }
      get :new
      assigns(:ordem_servico_item).should be(mock_ordem_servico_item)
    end
  end

  describe "GET edit" do
    it "assigns the requested ordem_servico_item as @ordem_servico_item" do
      OrdemServicoItem.stub(:find).with("37") { mock_ordem_servico_item }
      get :edit, :id => "37"
      assigns(:ordem_servico_item).should be(mock_ordem_servico_item)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created ordem_servico_item as @ordem_servico_item" do
        OrdemServicoItem.stub(:new).with({'these' => 'params'}) { mock_ordem_servico_item(:save => true) }
        post :create, :ordem_servico_item => {'these' => 'params'}
        assigns(:ordem_servico_item).should be(mock_ordem_servico_item)
      end

      it "redirects to the created ordem_servico_item" do
        OrdemServicoItem.stub(:new) { mock_ordem_servico_item(:save => true) }
        post :create, :ordem_servico_item => {}
        response.should redirect_to(ordem_servico_item_url(mock_ordem_servico_item))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved ordem_servico_item as @ordem_servico_item" do
        OrdemServicoItem.stub(:new).with({'these' => 'params'}) { mock_ordem_servico_item(:save => false) }
        post :create, :ordem_servico_item => {'these' => 'params'}
        assigns(:ordem_servico_item).should be(mock_ordem_servico_item)
      end

      it "re-renders the 'new' template" do
        OrdemServicoItem.stub(:new) { mock_ordem_servico_item(:save => false) }
        post :create, :ordem_servico_item => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested ordem_servico_item" do
        OrdemServicoItem.stub(:find).with("37") { mock_ordem_servico_item }
        mock_ordem_servico_item.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :ordem_servico_item => {'these' => 'params'}
      end

      it "assigns the requested ordem_servico_item as @ordem_servico_item" do
        OrdemServicoItem.stub(:find) { mock_ordem_servico_item(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:ordem_servico_item).should be(mock_ordem_servico_item)
      end

      it "redirects to the ordem_servico_item" do
        OrdemServicoItem.stub(:find) { mock_ordem_servico_item(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(ordem_servico_item_url(mock_ordem_servico_item))
      end
    end

    describe "with invalid params" do
      it "assigns the ordem_servico_item as @ordem_servico_item" do
        OrdemServicoItem.stub(:find) { mock_ordem_servico_item(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:ordem_servico_item).should be(mock_ordem_servico_item)
      end

      it "re-renders the 'edit' template" do
        OrdemServicoItem.stub(:find) { mock_ordem_servico_item(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested ordem_servico_item" do
      OrdemServicoItem.stub(:find).with("37") { mock_ordem_servico_item }
      mock_ordem_servico_item.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the ordem_servico_itens list" do
      OrdemServicoItem.stub(:find) { mock_ordem_servico_item }
      delete :destroy, :id => "1"
      response.should redirect_to(ordem_servico_itens_url)
    end
  end

end
