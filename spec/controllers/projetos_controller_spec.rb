require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe ProjetosController do

  def mock_projeto(stubs={})
    @mock_projeto ||= mock_model(Projeto, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all projetos as @projetos" do
      Projeto.stub(:all) { [mock_projeto] }
      get :index
      assigns(:projetos).should eq([mock_projeto])
    end
  end

  describe "GET show" do
    it "assigns the requested projeto as @projeto" do
      Projeto.stub(:find).with("37") { mock_projeto }
      get :show, :id => "37"
      assigns(:projeto).should be(mock_projeto)
    end
  end

  describe "GET new" do
    it "assigns a new projeto as @projeto" do
      Projeto.stub(:new) { mock_projeto }
      get :new
      assigns(:projeto).should be(mock_projeto)
    end
  end

  describe "GET edit" do
    it "assigns the requested projeto as @projeto" do
      Projeto.stub(:find).with("37") { mock_projeto }
      get :edit, :id => "37"
      assigns(:projeto).should be(mock_projeto)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created projeto as @projeto" do
        Projeto.stub(:new).with({'these' => 'params'}) { mock_projeto(:save => true) }
        post :create, :projeto => {'these' => 'params'}
        assigns(:projeto).should be(mock_projeto)
      end

      it "redirects to the created projeto" do
        Projeto.stub(:new) { mock_projeto(:save => true) }
        post :create, :projeto => {}
        response.should redirect_to(projeto_url(mock_projeto))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved projeto as @projeto" do
        Projeto.stub(:new).with({'these' => 'params'}) { mock_projeto(:save => false) }
        post :create, :projeto => {'these' => 'params'}
        assigns(:projeto).should be(mock_projeto)
      end

      it "re-renders the 'new' template" do
        Projeto.stub(:new) { mock_projeto(:save => false) }
        post :create, :projeto => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested projeto" do
        Projeto.stub(:find).with("37") { mock_projeto }
        mock_projeto.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :projeto => {'these' => 'params'}
      end

      it "assigns the requested projeto as @projeto" do
        Projeto.stub(:find) { mock_projeto(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:projeto).should be(mock_projeto)
      end

      it "redirects to the projeto" do
        Projeto.stub(:find) { mock_projeto(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(projeto_url(mock_projeto))
      end
    end

    describe "with invalid params" do
      it "assigns the projeto as @projeto" do
        Projeto.stub(:find) { mock_projeto(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:projeto).should be(mock_projeto)
      end

      it "re-renders the 'edit' template" do
        Projeto.stub(:find) { mock_projeto(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested projeto" do
      Projeto.stub(:find).with("37") { mock_projeto }
      mock_projeto.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the projetos list" do
      Projeto.stub(:find) { mock_projeto }
      delete :destroy, :id => "1"
      response.should redirect_to(projetos_url)
    end
  end

end
